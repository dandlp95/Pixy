{
  "swagger": "2.0",
  "info": {
    "title": "Pixy",
    "description": "A place where photographers can share their work, which users can access and download for free.",
    "version": "1.0.0"
  },
  "host": "pixy-app.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "Operations for users"
    },
    {
      "name": "Albums",
      "description": "Operations for albums"
    },
    {
      "name": "Clips",
      "description": "Operations for clips"
    },
    {
      "name": "Photos",
      "description": "Operations for photos"
    },
    {
      "name": "Other",
      "description": "Operations for other endpoints"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api-docs": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets all Users",
        "description": "Gets all Users from the database",
        "operationId": "getUsers.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returned all Users successfully.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Adds a new User.",
        "description": "Adds a new User to the database .",
        "operationId": "addUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully sent to database",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a User by Id.",
        "description": "Gets a User by the Id requested from the database.",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned a User by Id successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edits a User by Id.",
        "description": "Send updated information about the User by Id to the database.",
        "operationId": "editUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes a User by Id.",
        "description": "Deletes a User from the database by the User Id.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/photos/": {
      "get": {
        "tags": [
          "Photos"
        ],
        "summary": "Gets all Photos",
        "description": "Gets all Photos from the database",
        "operationId": "getPhotos.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returned all Photos successfully.",
            "schema": {
              "$ref": "#/definitions/Medias"
            }
          }
        }
      }
    },
    "/photos/{id}": {
      "get": {
        "tags": [
          "Photos"
        ],
        "summary": "Gets a Photo by Id.",
        "description": "Gets a Photo by the Id requested from the database.",
        "operationId": "getPhoto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Photo Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned Photo by Id successfully",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      }
    },
    "/photos/add": {
      "post": {
        "tags": [
          "Photos"
        ],
        "summary": "Adds a new Photo.",
        "description": "Adds a new Photo to the database .",
        "operationId": "addPhoto",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Photo successfully sent to database",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      }
    },
    "/photos/edit/{id}": {
      "put": {
        "tags": [
          "Photos"
        ],
        "summary": "Edits a Photo by Id.",
        "description": "Send updated information about the Photo by Id to the database.",
        "operationId": "editPhoto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Photo successfully updated",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      }
    },
    "/photos/delete/{id}": {
      "delete": {
        "tags": [
          "Photos"
        ],
        "summary": "Deletes a Photo by Id.",
        "description": "Deletes a Photo from the database by the Photo Id.",
        "operationId": "deletePhoto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Photo successfully deleted",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      }
    },
    "/albums/": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Gets all Albums",
        "description": "Gets all Albums from the database",
        "operationId": "getAlbums.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returned all Albums successfully.",
            "schema": {
              "$ref": "#/definitions/Albums"
            }
          }
        }
      }
    },
    "/albums/{id}": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Gets an Album by Id.",
        "description": "Gets an Album by the Id requested from the database.",
        "operationId": "getAlbum",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Album Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned an Album by Id successfully",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          }
        }
      }
    },
    "/albums/add": {
      "post": {
        "tags": [
          "Albums"
        ],
        "summary": "Adds a new Album.",
        "description": "Adds a new Album to the database .",
        "operationId": "addAlbum",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Albums"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album successfully sent to database",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          }
        }
      }
    },
    "/albums/edit/{id}": {
      "put": {
        "tags": [
          "Albums"
        ],
        "summary": "Edits an Album by Id.",
        "description": "Send updated information about the Album by Id to the database.",
        "operationId": "editAlbum",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Albums"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album successfully updated",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          }
        }
      }
    },
    "/albums/delete/{id}": {
      "delete": {
        "tags": [
          "Albums"
        ],
        "summary": "Deletes an Album by Id.",
        "description": "Deletes an Album from the database by the Album Id.",
        "operationId": "deleteAlbum",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Album successfully deleted",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          }
        }
      }
    },
    "/clips/": {
      "get": {
        "tags": [
          "Clips"
        ],
        "summary": "Gets all Clips",
        "description": "Gets all Clips from the database",
        "operationId": "getClips.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returned all clips successfully.",
            "schema": {
              "$ref": "#/definitions/Medias"
            }
          }
        }
      }
    },
    "/clips/{id}": {
      "get": {
        "tags": [
          "Clips"
        ],
        "summary": "Gets a clip by Id.",
        "description": "Gets a clip by the Id requested from the database.",
        "operationId": "getClip",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Clip Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned clip by Id successfully",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      }
    },
    "/clips/add": {
      "post": {
        "tags": [
          "Clips"
        ],
        "summary": "Adds a new clip.",
        "description": "Adds a new clip to the database .",
        "operationId": "addClip",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Clips"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Clip successfully sent to database",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      }
    },
    "/clips/edit/{id}": {
      "put": {
        "tags": [
          "Clips"
        ],
        "summary": "Edits a clip by Id.",
        "description": "Send updated information about the clip by Id to the database.",
        "operationId": "editClip",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Clip successfully updated",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      }
    },
    "/clips/delete/{id}": {
      "delete": {
        "tags": [
          "Clips"
        ],
        "summary": "Deletes a clip by Id.",
        "description": "Deletes a clip from the database by the clip Id.",
        "operationId": "deleteClip",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Clip successfully deleted",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "User's First Name"
        },
        "lastName": {
          "type": "string",
          "example": "User's Last Name"
        },
        "email": {
          "type": "string",
          "example": "usersemail@email.com"
        },
        "password": {
          "type": "string",
          "example": "User's Password"
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "Media": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Media's Name"
        },
        "description": {
          "type": "string",
          "example": "Media's Description"
        },
        "encodedMedia": {
          "type": "string",
          "example": "Encoded Media"
        },
        "location": {
          "type": "string",
          "example": "Media's Location"
        },
        "user": {
          "type": "string",
          "example": "User's name who created the media"
        },
        "cameraUsed": {
          "type": "string",
          "example": "Camera Type"
        },
        "tags": {
          "type": "array",
          "example": [
            "tagOne",
            "tagTwo"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Medias": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Media"
      }
    },
    "Album": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Album's Name"
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Medias"
          }
        },
        "user": {
          "type": "string",
          "example": "Owner of the Album"
        },
        "tags": {
          "type": "array",
          "example": [
            "tagOne",
            "tagTwo"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Albums": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Album"
      }
    }
  }
}